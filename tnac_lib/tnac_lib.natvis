<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

  <Type Name="utils::ratio&lt;*&gt;">
    <DisplayString Condition="m_sign &lt; 0">-({m_num}/{m_den})</DisplayString>
    <DisplayString Condition="m_sign &gt; 0">({m_num}/{m_den})</DisplayString>
    <DisplayString Condition="m_sign == 0">0</DisplayString>
  </Type>

  <Type Name="tnac::token">
    <DisplayString>{m_kind,en} ({m_value,sb})</DisplayString>
  </Type>

  
  <Type Name="tnac::eval::value">
    <DisplayString>{(tnac::eval::type_id)((m_val &amp; 0xFF00000000000000) &gt;&gt; 56),en}</DisplayString>
    <Expand>
      <Item Name="[kind]">(tnac::eval::type_id)((m_val &amp; 0xFF00000000000000) &gt;&gt; 56),en</Item>
      <Item Name="[value]" Condition="((m_val &amp; 0xFF00000000000000) &gt;&gt; 56) == 0">"&lt;undef&gt;",sb</Item>
      <Item Name="[value]" Condition="((m_val &amp; 0xFF00000000000000) &gt;&gt; 56) == 1">*((bool*)(m_val &amp; 0x00ffffffffffffff))</Item>
      <Item Name="[value]" Condition="((m_val &amp; 0xFF00000000000000) &gt;&gt; 56) == 2">*((long long*)(m_val &amp; 0x00ffffffffffffff))</Item>
      <Item Name="[value]" Condition="((m_val &amp; 0xFF00000000000000) &gt;&gt; 56) == 3">*((double*)(m_val &amp; 0x00ffffffffffffff))</Item>
      <Item Name="[value]" Condition="((m_val &amp; 0xFF00000000000000) &gt;&gt; 56) == 4">*((tnac::eval::complex_type*)(m_val &amp; 0x00ffffffffffffff))</Item>
      <Item Name="[value]" Condition="((m_val &amp; 0xFF00000000000000) &gt;&gt; 56) == 5">*((tnac::eval::fraction_type*)(m_val &amp; 0x00ffffffffffffff))</Item>
      <Item Name="[value]" Condition="((m_val &amp; 0xFF00000000000000) &gt;&gt; 56) == 6">*((tnac::eval::function_type*)(m_val &amp; 0x00ffffffffffffff))</Item>
      <Item Name="[value]" Condition="((m_val &amp; 0xFF00000000000000) &gt;&gt; 56) == 7">*((tnac::eval::array_type*)(m_val &amp; 0x00ffffffffffffff))</Item>
      <Item Name="[raw]">m_val,Xb</Item>
    </Expand>
  </Type>

  <Type Name="tnac::eval::value_visitor">
    <DisplayString>Value visitor</DisplayString>
    <Expand>
      <Item Name="[registy]">m_registry</Item>
      <Item Name="[entity]">m_curEntity,Xb</Item>
    </Expand>
  </Type>

  <Type Name="tnac::eval::registry">
    <DisplayString>Value registry</DisplayString>
    <Expand>
      <Item Name="[arrays]">m_arrays</Item>
      <Item Name="[entity values]">m_entityValues</Item>
      <Item Name="[pending cleanup]">m_pendingCleanup</Item>
      <Item Name="[active]">m_inFlight</Item>
      <Item Name="[last result]">m_result</Item>
    </Expand>
  </Type>

  <Type Name="tnac::eval::call_stack">
    <DisplayString>Call stack</DisplayString>
    <Expand>
      <Item Name="[depth]">m_depth</Item>
      <Item Name="[frames]">m_frames</Item>
    </Expand>
  </Type>

  <Type Name="tnac::eval::detail::stack_frame">
    <DisplayString>Frame({m_name,sb})</DisplayString>
    <Expand>
      <Item Name="[name]">m_name,sb</Item>
      <Item Name="[args]">m_args</Item>
      <Item Name="[params]">m_params</Item>
    </Expand>
  </Type>

  <Type Name="tnac::evaluator">
    <DisplayString Condition="m_return">Evaluator (returning)</DisplayString>
    <DisplayString Condition="!m_return">Evaluator (normal)</DisplayString>
    <Expand>
      <Item Name="[value visitor]">m_visitor</Item>
      <Item Name="[stack]">m_callStack</Item>
      <Item Name="[on error]">m_errHandler</Item>
    </Expand>
  </Type>

  <Type Name="tnac::semantics::scope">
    <DisplayString>scope</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_enclosing">*m_enclosing</Item>
      <Item Name="[parent]" Condition="!m_enclosing">"&lt;global&gt;",sb</Item>
      <Item Name="[scope]" Condition="m_node">*m_node</Item>
      <Item Name="[scope]" Condition="!m_node">"&lt;empty&gt;"</Item>
    </Expand>
  </Type>

  <Type Name="tnac::semantics::symbol">
    <DisplayString>{m_kind,en} ({m_decl->m_id.m_value,sb})</DisplayString>
    <Expand>
      <Item Name="[decl]">*m_decl</Item>
      <Item Name="[parent]">*m_owner</Item>
      <Item Name="[value]">m_value</Item>
    </Expand>
  </Type>

  <Type Name="tnac::eval::function_type">
    <DisplayString Condition="m_func">function({m_func->m_decl->m_id.m_value,sb})</DisplayString>
    <DisplayString Condition="!m_func">empty function</DisplayString>
    <Expand>
      <Item Name="[function]" Condition="m_func">*m_func</Item>
    </Expand>
  </Type>

  <Type Name="tnac::eval::array_type">
    <DisplayString>Array data</DisplayString>
    <Expand>
      <Item Name="[array]">*m_underlying</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::decl">
    <DisplayString>{m_kind,en} ({m_id.m_value,sb})</DisplayString>
    <Expand>
      <Item Name="[name]">m_id.m_value,sb</Item>
      <Item Name="[symbol]">*m_symbol</Item>
      <Item Name="[definition]" Condition="m_def">*m_def</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::func_decl">
    <DisplayString>{m_kind,en} ({m_id.m_value,sb})</DisplayString>
    <Expand>
      <Item Name="[name]">m_id.m_value,sb</Item>
      <Item Name="[symbol]">*m_symbol</Item>
      <Item Name="[definition]">*m_def</Item>
      <Item Name="[params]">m_params</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::node">
    <DisplayString>{m_kind,en}</DisplayString>
  </Type>

  <Type Name="tnac::ast::lit_expr">
    <DisplayString>{m_kind,en} ({m_pos.m_value,sb})</DisplayString>
  </Type>

  <Type Name="tnac::ast::ret_expr">
    <DisplayString>{m_kind,en}</DisplayString>
    <Expand>
      <Item Name="[expr]">m_retVal</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::scope">
    <DisplayString>{m_kind,en}</DisplayString>
    <Expand>
      <Item Name="[children]">m_children</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::binary_expr">
    <DisplayString>{m_kind,en} ({m_op})</DisplayString>
    <Expand>
      <Item Name="[left]">*m_left</Item>
      <Item Name="[right]">*m_right</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::unary_expr">
    <DisplayString>{m_kind,en} ({m_pos})</DisplayString>
    <Expand>
      <Item Name="[operand]">*m_expr</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::id_expr">
    <DisplayString>{m_kind,en} ({m_pos.m_value,sb})</DisplayString>
    <Expand>
      <Item Name="[symbol]">*m_sym</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::paren_expr">
    <DisplayString>{m_kind,en} ({*m_expr})</DisplayString>
    <Expand>
      <Item Name="[expr]">*m_expr</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::abs_expr">
    <DisplayString>{m_kind,en} ({*m_expr})</DisplayString>
    <Expand>
      <Item Name="[expr]">*m_expr</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::call_expr">
    <DisplayString>{m_kind,en} ({m_pos.m_value,sb})</DisplayString>
    <Expand>
      <Item Name="[callee]">*m_callee</Item>
      <Item Name="[args]">m_args</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::array_expr">
    <DisplayString>{m_kind,en}</DisplayString>
    <Expand>
      <Item Name="[elements]">m_elements</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::cond_short">
    <DisplayString>{m_kind,en}</DisplayString>
    <Expand>
      <Item Name="[cond]">*m_cond</Item>
      <Item Name="[true]" Condition="m_true">*m_true</Item>
      <Item Name="[true]" Condition="!m_true">"&lt;null&gt;",sb</Item>
      <Item Name="[false]" Condition="m_false">*m_false</Item>
      <Item Name="[false]" Condition="!m_false">"&lt;null&gt;",sb</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::cond_expr">
    <DisplayString>{m_kind,en}</DisplayString>
    <Expand>
      <Item Name="[cond]">*m_cond</Item>
      <Item Name="[body]">*m_body</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::pattern">
    <DisplayString>{m_kind,en}</DisplayString>
    <Expand>
      <Item Name="[matcher]">*m_matcher</Item>
      <Item Name="[body]">*m_body</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::matcher">
    <DisplayString>{m_kind,en}</DisplayString>
    <Expand>
      <Item Name="[op]" Condition="m_checked&amp;&amp;m_pos.m_kind!=tnac::tok_kind::CurlyOpen&amp;&amp;m_pos.m_kind!=m_checked->m_pos.m_kind">m_pos</Item>
      <Item Name="[op]" Condition="m_checked&amp;&amp;m_pos.m_kind!=tnac::tok_kind::CurlyOpen&amp;&amp;m_pos.m_kind==m_checked->m_pos.m_kind">"== implicit",sb</Item>
      <Item Name="[op]" Condition="!m_checked&amp;&amp;m_pos.m_kind==tnac::tok_kind::Exclamation">"!",sb</Item>
      <Item Name="[expr]" Condition="m_checked">*m_checked</Item>
      <Item Name="[expr]" Condition="m_pos.m_kind==tnac::tok_kind::CurlyOpen">"&lt;default&gt;",sb</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::decl_expr">
    <DisplayString>{m_kind,en}({*m_decl})</DisplayString>
    <Expand>
      <Item Name="[declarator]">*m_decl</Item>
    </Expand>
  </Type>

</AutoVisualizer>
