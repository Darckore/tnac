<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

  <Type Name="tnac::token">
    <DisplayString>{m_kind,en} ({m_value,sb})</DisplayString>
    <Expand>
      <Item Name="[location]">m_loc</Item>
    </Expand>
  </Type>

  <Type Name="tnac::entity_id">
    <DisplayString>{m_value,Xb}</DisplayString>
  </Type>


  <Type Name="tnac::eval::value">
    <DisplayString>{(tnac::eval::type_id)((m_val &amp; 0xFF00000000000000) &gt;&gt; 56),en}</DisplayString>
    <Expand>
      <Item Name="[kind]">(tnac::eval::type_id)((m_val &amp; 0xFF00000000000000) &gt;&gt; 56),en</Item>
      <Item Name="[value]" Condition="((m_val &amp; 0xFF00000000000000) &gt;&gt; 56) == 0">"&lt;undef&gt;",sb</Item>
      <Item Name="[value]" Condition="((m_val &amp; 0xFF00000000000000) &gt;&gt; 56) == 1">*((bool*)(m_val &amp; 0x00ffffffffffffff))</Item>
      <Item Name="[value]" Condition="((m_val &amp; 0xFF00000000000000) &gt;&gt; 56) == 2">*((long long*)(m_val &amp; 0x00ffffffffffffff))</Item>
      <Item Name="[value]" Condition="((m_val &amp; 0xFF00000000000000) &gt;&gt; 56) == 3">*((double*)(m_val &amp; 0x00ffffffffffffff))</Item>
      <Item Name="[value]" Condition="((m_val &amp; 0xFF00000000000000) &gt;&gt; 56) == 4">*((tnac::eval::complex_type*)(m_val &amp; 0x00ffffffffffffff))</Item>
      <Item Name="[value]" Condition="((m_val &amp; 0xFF00000000000000) &gt;&gt; 56) == 5">*((tnac::eval::fraction_type*)(m_val &amp; 0x00ffffffffffffff))</Item>
      <Item Name="[value]" Condition="((m_val &amp; 0xFF00000000000000) &gt;&gt; 56) == 6">*((tnac::eval::function_type*)(m_val &amp; 0x00ffffffffffffff))</Item>
      <Item Name="[value]" Condition="((m_val &amp; 0xFF00000000000000) &gt;&gt; 56) == 7">*((tnac::eval::array_type*)(m_val &amp; 0x00ffffffffffffff))</Item>
      <Item Name="[raw]">m_val,Xb</Item>
    </Expand>
  </Type>

  <Type Name="tnac::eval::evaluator">
    <DisplayString>Evaluator</DisplayString>
    <Expand>
      <Item Name="[registy]">m_registry</Item>
      <Item Name="[entity]">m_curEntity,Xb</Item>
    </Expand>
  </Type>

  <Type Name="tnac::eval::registry">
    <DisplayString>Value registry</DisplayString>
    <Expand>
      <Item Name="[arrays]">m_arrays</Item>
      <Item Name="[entity values]">m_entityValues</Item>
      <Item Name="[active]">m_inFlight</Item>
      <Item Name="[last result]">m_result</Item>
    </Expand>
  </Type>


  <Type Name="tnac::src::location">
    <DisplayString>location</DisplayString>
    <Expand>
      <Item Name="[filename]" Condition="m_path">*m_path</Item>
      <Item Name="[filename]" Condition="!m_path">"&lt;dummy&gt;",sb</Item>
      <Item Name="[src manager]" Condition="m_mgr">*m_mgr</Item>
      <Item Name="[src manager]" Condition="!m_mgr">"&lt;dummy&gt;",sb</Item>
      <Item Name="[line]">m_lineNumber</Item>
      <Item Name="[column]">m_column</Item>
    </Expand>
  </Type>

  <Type Name="tnac::src::loc_wrapper">
    <DisplayString Condition="m_loc">loc wrapper</DisplayString>
    <DisplayString Condition="!m_loc">loc wrapper (empty)</DisplayString>
    <Expand>
      <Item Name="[location]" Condition="m_loc">*m_loc</Item>
      <Item Name="[location]" Condition="!m_loc">"&lt;empty&gt;",sb</Item>
    </Expand>
  </Type>

  <Type Name="tnac::source_manager">
    <DisplayString>source manager</DisplayString>
    <Expand>
      <Item Name="[files]">m_files</Item>
      <Item Name="[stored locs]">m_locations</Item>
    </Expand>
  </Type>

  <Type Name="tnac::src::file">
    <DisplayString>source file</DisplayString>
    <Expand>
      <Item Name="[path]">m_path</Item>
      <Item Name="[buffer]">m_buffer,sb</Item>
      <Item Name="[source manager]">*m_mgr</Item>
      <Item Name="[ast]" Condition="m_parsed">*m_parsed</Item>
      <Item Name="[ast]" Condition="!m_parsed">"&lt;not parsed&gt;",sb</Item>
      <Item Name="[line info]">m_lines</Item>
    </Expand>
  </Type>

  <Type Name="tnac::src::file::line">
    <DisplayString>&lt;{beg}:{end}&gt;</DisplayString>
  </Type>

  
  <Type Name="tnac::semantics::scope">
    <DisplayString>scope</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_enclosing">*m_enclosing</Item>
      <Item Name="[parent]" Condition="!m_enclosing">"&lt;global&gt;",sb</Item>
      <Item Name="[depth]">m_depth</Item>
      <Item Name="[kind]">m_scopeKind,en</Item>
      <Item Name="[symbol]" Condition="m_sym">*m_sym</Item>
    </Expand>
  </Type>

  <Type Name="tnac::semantics::symbol">
    <DisplayString>{m_kind,en} ({m_name,sb})</DisplayString>
    <Expand>
      <Item Name="[name]">m_name,sb</Item>
      <Item Name="[parent]">*m_owner</Item>
    </Expand>
  </Type>

  <Type Name="tnac::semantics::function">
    <DisplayString>{m_kind,en} ({m_name,sb})</DisplayString>
    <Expand>
      <Item Name="[name]">m_name,sb</Item>
      <Item Name="[parent]">*m_owner</Item>
      <Item Name="[params]">m_params</Item>
      <Item Name="[own scope]">*m_ownedScope</Item>
    </Expand>
  </Type>

  <Type Name="tnac::semantics::module_sym">
    <DisplayString>{m_kind,en} ({m_name,sb})</DisplayString>
    <Expand>
      <Item Name="[name]">m_name,sb</Item>
      <Item Name="[parent]">*m_owner</Item>
      <Item Name="[params]">m_params</Item>
      <Item Name="[own scope]">*m_ownedScope</Item>
    </Expand>
  </Type>

  <Type Name="tnac::semantics::scope_ref">
    <DisplayString>{m_kind,en} ({m_name,sb})</DisplayString>
    <Expand>
      <Item Name="[name]">m_name,sb</Item>
      <Item Name="[referenced]">*m_referenced</Item>
      <Item Name="[parent]">*m_owner</Item>
    </Expand>
  </Type>

  
  <Type Name="tnac::eval::function_type">
    <DisplayString Condition="m_func">function({m_func->m_name,sb})</DisplayString>
    <DisplayString Condition="!m_func">empty function</DisplayString>
    <Expand>
      <Item Name="[function]" Condition="m_func">*m_func</Item>
    </Expand>
  </Type>

  <Type Name="tnac::eval::array_type">
    <DisplayString>Array data</DisplayString>
    <Expand>
      <Item Name="[array]">*m_underlying</Item>
      <Item Name="[id]">m_id</Item>
    </Expand>
  </Type>

  
  <Type Name="tnac::ast::decl">
    <DisplayString>{m_kind,en} ({m_id.m_value,sb})</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
      <Item Name="[name]">m_id.m_value,sb</Item>
      <Item Name="[symbol]">*m_symbol</Item>
      <Item Name="[definition]" Condition="m_def">*m_def</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::func_decl">
    <DisplayString>{m_kind,en} ({m_id.m_value,sb})</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
      <Item Name="[name]">m_id.m_value,sb</Item>
      <Item Name="[symbol]">*m_symbol</Item>
      <Item Name="[definition]">*m_def</Item>
      <Item Name="[params]">m_params</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::node">
    <DisplayString>{m_kind,en}</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::lit_expr">
    <DisplayString>{m_kind,en} ({m_pos.m_value,sb})</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::ret_expr">
    <DisplayString>{m_kind,en}</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
      <Item Name="[expr]">m_retVal</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::scope">
    <DisplayString>{m_kind,en}</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
      <Item Name="[children]">m_children</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::root">
    <DisplayString>{m_kind,en}</DisplayString>
    <Expand>
      <Item Name="[modules]">m_modules</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::module_def">
    <DisplayString>{m_kind,en}</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
      <Item Name="[name]">m_name,sb</Item>
      <Item Name="[children]">m_children</Item>
      <Item Name="[params]">m_params</Item>
      <Item Name="[imports]">m_imports</Item>
      <Item Name="[symbol]" Condition="m_sym">*m_sym</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::import_dir">
    <DisplayString>{m_kind,en}</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
      <Item Name="[name]">m_name</Item>
      <Item Name="[pos]">m_pos</Item>
      <Item Name="[alias]" Condition="m_aliasName">*m_aliasName</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::binary_expr">
    <DisplayString>{m_kind,en} ({m_op})</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
      <Item Name="[left]">*m_left</Item>
      <Item Name="[right]">*m_right</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::dot_expr">
    <DisplayString>{m_kind,en}</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
      <Item Name="[accessed]">*m_accessed</Item>
      <Item Name="[accessor]">*m_accessor</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::unary_expr">
    <DisplayString>{m_kind,en} ({m_pos})</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
      <Item Name="[operand]">*m_expr</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::id_expr">
    <DisplayString>{m_kind,en} ({m_pos.m_value,sb})</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
      <Item Name="[symbol]">*m_sym</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::paren_expr">
    <DisplayString>{m_kind,en} ({*m_expr})</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
      <Item Name="[expr]">*m_expr</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::abs_expr">
    <DisplayString>{m_kind,en} ({*m_expr})</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
      <Item Name="[expr]">*m_expr</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::call_expr">
    <DisplayString>{m_kind,en} ({m_pos.m_value,sb})</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
      <Item Name="[callee]">*m_callee</Item>
      <Item Name="[args]">m_args</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::array_expr">
    <DisplayString>{m_kind,en}</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
      <Item Name="[elements]">m_elements</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::cond_short">
    <DisplayString>{m_kind,en}</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
      <Item Name="[cond]">*m_cond</Item>
      <Item Name="[true]" Condition="m_true">*m_true</Item>
      <Item Name="[true]" Condition="!m_true">"&lt;null&gt;",sb</Item>
      <Item Name="[false]" Condition="m_false">*m_false</Item>
      <Item Name="[false]" Condition="!m_false">"&lt;null&gt;",sb</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::cond_expr">
    <DisplayString>{m_kind,en}</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
      <Item Name="[cond]">*m_cond</Item>
      <Item Name="[body]">*m_body</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::pattern">
    <DisplayString>{m_kind,en}</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
      <Item Name="[matcher]">*m_matcher</Item>
      <Item Name="[body]">*m_body</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::matcher">
    <DisplayString>{m_kind,en}</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
      <Item Name="[op]" Condition="m_checked&amp;&amp;m_pos.m_kind!=tnac::tok_kind::CurlyOpen&amp;&amp;m_pos.m_kind!=m_checked->m_pos.m_kind">m_pos</Item>
      <Item Name="[op]" Condition="m_checked&amp;&amp;m_pos.m_kind!=tnac::tok_kind::CurlyOpen&amp;&amp;m_pos.m_kind==m_checked->m_pos.m_kind">"== implicit",sb</Item>
      <Item Name="[op]" Condition="!m_checked&amp;&amp;m_pos.m_kind==tnac::tok_kind::Exclamation">"!",sb</Item>
      <Item Name="[expr]" Condition="m_checked">*m_checked</Item>
      <Item Name="[expr]" Condition="m_pos.m_kind==tnac::tok_kind::CurlyOpen">"&lt;default&gt;",sb</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::decl_expr">
    <DisplayString>{m_kind,en}({*m_decl})</DisplayString>
    <Expand>
      <Item Name="[parent]" Condition="m_parent">*m_parent</Item>
      <Item Name="[declarator]">*m_decl</Item>
    </Expand>
  </Type>


  <Type Name="tnac::parser">
    <DisplayString Condition="m_feedback">parser (handlers attached)</DisplayString>
    <DisplayString Condition="!m_feedback">parser</DisplayString>
    <Expand>
      <Item Name="[lexer]">m_lex</Item>
      <Item Name="[ast builder]">m_builder</Item>
      <Item Name="[sema]">m_sema</Item>
      <Item Name="[root]" Condition="m_root">*m_root</Item>
      <Item Name="[root]" Condition="!m_root">"&lt;null&gt;",sb</Item>
      <Item Name="[current module]" Condition="m_curModule">*m_curModule</Item>
      <Item Name="[current module]" Condition="!m_curModule">"&lt;null&gt;",sb</Item>
    </Expand>
  </Type>

  <Type Name="tnac::lex">
    <DisplayString>lexer</DisplayString>
    <Expand>
      <Item Name="[buffer]">m_buf,sb</Item>
      <Item Name="[peek]">m_preview</Item>
      <Item Name="[from]">m_from</Item>
      <Item Name="[to]">m_to</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ast::builder">
    <DisplayString>ast builder</DisplayString>
    <Expand>
      <Item Name="[nodes]">m_store</Item>
    </Expand>
  </Type>

  <Type Name="tnac::sema">
    <DisplayString>sema</DisplayString>
    <Expand>
      <Item Name="[symbol table]">m_symTab</Item>
      <Item Name="[current scope]" Condition="m_curScope">*m_curScope</Item>
      <Item Name="[current scope]" Condition="!m_curScope">"&lt;null&gt;",sb</Item>
      <Item Name="[fake names]">m_generatedNames</Item>
    </Expand>
  </Type>

  <Type Name="tnac::semantics::sym_table">
    <DisplayString>symbol table</DisplayString>
    <Expand>
      <Item Name="[collection]">m_names</Item>
      <Item Name="[modules]">m_modules</Item>
      <Item Name="[functions]">m_funcs</Item>
      <Item Name="[variables]">m_vars</Item>
      <Item Name="[scope store]">m_scopes</Item>
      <Item Name="[sym store]">m_symbols</Item>
    </Expand>
  </Type>


  <Type Name="tnac::core">
    <DisplayString>tnac</DisplayString>
    <Expand>
      <Item Name="[parser]">m_parser</Item>
      <Item Name="[sema]">m_sema</Item>
      <Item Name="[source manager]">m_srcMgr</Item>
      <Item Name="[builder]">m_astBuilder</Item>
      <Item Name="[cmd interpreter]">m_cmdInterpreter</Item>
      <Item Name="[cmd store]">m_cmdStore</Item>
    </Expand>
  </Type>

  <Type Name="tnac::commands::store">
    <DisplayString>command store</DisplayString>
    <Expand>
      <Item Name="[commands]">m_cmds</Item>
    </Expand>
  </Type>

  <Type Name="tnac::cmd">
    <DisplayString>command interpreter</DisplayString>
    <Expand>
      <Item Name="[store]">*m_cmdStore</Item>
    </Expand>
  </Type>

  <Type Name="tnac::compiler">
    <DisplayString Condition="m_feedback">compiler (handlers attached)</DisplayString>
    <DisplayString Condition="!m_feedback">compiler</DisplayString>
    <Expand>
      <Item Name="[sema]">m_sema</Item>
      <Item Name="[cfg]">m_cfg</Item>
      <Item Name="[evaluator]">m_eval</Item>
      <Item Name="[context]">m_context</Item>
      <Item Name="[name repo]">m_names</Item>
      <Item Name="[stack]">m_stack</Item>
    </Expand>
  </Type>

  <Type Name="tnac::detail::context">
    <DisplayString>module info</DisplayString>
    <Expand>
      <Item Name="[data]">m_data</Item>
      <Item Name="[stack]">m_stack</Item>
      <Item Name="[funcs]">m_funcs</Item>
    </Expand>
  </Type>

  <Type Name="tnac::detail::name_repo">
    <DisplayString>name repo</DisplayString>
    <Expand>
      <Item Name="[plain names]">m_plainNames</Item>
      <Item Name="[pref names]">m_prefNames</Item>
    </Expand>
  </Type>

  <Type Name="tnac::detail::compiler_stack">
    <DisplayString>compiler stack</DisplayString>
    <Expand>
      <Item Name="[data]">m_data</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ir::function">
    <DisplayString Condition="m_owner">function {m_name,sb}</DisplayString>
    <DisplayString Condition="!m_owner">module {m_name,sb}</DisplayString>
    <Expand>
      <Item Name="[name]">m_name,sb</Item>
      <Item Name="[id]">m_id</Item>
      <Item Name="[param_count]">m_paramCount</Item>
      <Item Name="[entry]" Condition="!m_entry">"&lt;not inited&gt;",sb</Item>
      <Item Name="[entry]" Condition="m_entry">*m_entry</Item>
      <Item Name="[owner]" Condition="m_owner">*m_owner</Item>
      <Item Name="[module]" Condition="m_owner">"no",sb</Item>
      <Item Name="[module]" Condition="!m_owner">"yes",sb</Item>
      <Item Name="[nested]">m_children</Item>
      <Item Name="[basic blocks]">m_blocks</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ir::basic_block">
    <DisplayString>basic block ({m_name,sb})</DisplayString>
    <Expand>
      <Item Name="[func]">*m_owner</Item>
      <Item Name="[name]">m_name,sb</Item>
      <Item Name="[first instruction]">m_first</Item>
      <Item Name="[last instruction]">m_last</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ir::edge">
    <DisplayString>CFG edge</DisplayString>
    <Expand>
      <Item Name="[in]">*m_in</Item>
      <Item Name="[out]">*m_out</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ir::operand">
    <DisplayString Condition="m_value._Which == 0">Operand (value)</DisplayString>
    <DisplayString Condition="m_value._Which == 1">Operand (func)</DisplayString>
    <DisplayString Condition="m_value._Which == 2">Operand (block)</DisplayString>
    <DisplayString>Operand (uninit)</DisplayString>
    <Expand>
      <Item Name="[value]">m_value</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ir::instruction">
    <DisplayString>instruction ({m_opCode,en})</DisplayString>
    <Expand>
      <Item Name="[owner]">*m_block</Item>
      <Item Name="[operands]">m_operands</Item>
      <Item Name="[opcode]">m_opCode,en</Item>
    </Expand>
  </Type>

  <Type Name="tnac::ir::builder">
    <DisplayString>IR builder</DisplayString>
    <Expand>
      <Item Name="[functions]">m_functions</Item>
      <Item Name="[basic blocks]">m_blocks</Item>
      <Item Name="[instructions]">m_instructions</Item>
    </Expand>
  </Type>
  
  <Type Name="tnac::ir::cfg">
    <DisplayString>CFG</DisplayString>
    <Expand>
      <Item Name="[IR builder]">*m_builder</Item>
      <Item Name="[modules]">m_modules</Item>
    </Expand>
  </Type>
  
</AutoVisualizer>
